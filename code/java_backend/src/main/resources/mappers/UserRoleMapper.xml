<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiabo.medical.mapper.UserRoleMapper">  
    <resultMap type="com.jiabo.medical.entity.User" id="userMap">
        <!-- 用id属性来映射主键字段 -->
        <id property="userId" column="user_id" javaType="java.lang.Integer"/>
        <!-- 用result属性来映射非主键字段 -->
        <result property="loginName" column="login_name"/>
        <result property="loginPassword" column="login_password"/>
        <result property="mobile" column="mobile"/>
        <result property="email" column="email"/>
        <result property="displayName" column="display_name"/>
        <result property="openId" column="weixin_openid"/>
        <result property="roleId" column="role_id" javaType="java.lang.Integer"/>
        <result property="roleName" column="role_name"/>
        <result property="deptId" column="dept_id"/>
        <result property="deptName" column="dept_name"/>
    </resultMap>
    
    <resultMap type="com.jiabo.medical.entity.UserRole" id="userRoleMap">
        <!-- 用id属性来映射主键字段 -->
        <id property="userId" column="user_id" javaType="java.lang.Integer"/>
        <!-- 用result属性来映射非主键字段 -->
        <result property="loginName" column="login_name"/>
        <result property="displayName" column="display_name"/>
        <result property="roleId" column="role_id" javaType="java.lang.Integer"/>
    </resultMap>
    
   <select id="checkUserInfo" resultType="java.lang.Integer" parameterType="java.lang.String">  
    select count(1)  from tb_user
        where login_name = #{loginName,jdbcType=VARCHAR}
  </select>
  
  <select id="findUserInfo" resultMap="userMap" parameterType="com.jiabo.medical.entity.User">  
    select tu.user_id,tu.login_name,tu.login_password,tu.mobile,tu.email,tu.display_name, tr.role_name , td.dept_id, td.dept_name
        from tb_user as tu
            left join  tr_user_role as tur
                on tur.user_id = tu.user_id
                    left join tb_role as tr
                        on tur.role_id = tr.role_id
                    left join tr_user_dept as tud
                        on tu.user_id = tud.user_id
                    left join tb_department as td
                        on tud.dept_id = td.dept_id
        where  tu.login_name = #{loginName,jdbcType=VARCHAR} and tu.login_password = #{loginPassword,jdbcType=VARCHAR} 
  </select>
  
  <select id="getUserWithOpenId" resultMap="userMap" parameterType="java.lang.String">  
    select tu.user_id,tu.login_name,tu.login_password, tu.mobile,tu.email,tu.display_name, tr.role_name,td.dept_id, td.dept_name,tu.weixin_openid 
        from tb_user as tu
            left join tr_user_role as tur
                on tur.user_id = tu.user_id
                    left join tb_role as tr
                        on tur.role_id = tr.role_id
                    left join tr_user_dept as tud
                        on tu.user_id = tud.user_id
                    left join tb_department as td
                        on tud.dept_id = td.dept_id
        where  tu.weixin_openid = #{openId}
  </select>
  
  <select id="getEngineerList"  resultMap="userMap">
    select tu.user_id, tu.login_name, tu.display_name,tu.mobile,tu.email, tr.role_name
        from tb_user as tu
        inner join tr_user_role as tur 
          on tur.user_id = tu.user_id
            inner join tb_role as tr
                on tur.role_id = tr.role_id
                  where tr.role_name like '%工程师%'
  </select>
  
  <select id="getRoleList"  resultMap="userMap">
    select role_id, role_name
        from tb_role
  </select>
  
  <select id="getUsersWithRole"  resultMap="userRoleMap" parameterType="java.lang.Integer">
    select tu.user_id, tu.login_name,tu.display_name,tur.role_id
        from tb_user as tu
           inner join tr_user_role as tur 
              on tur.user_id = tu.user_id
                  where tur.role_id = #{roleId,jdbcType=INTEGER}
  </select>
  
  <select id="getUsersWithoutRole"  resultMap="userRoleMap" parameterType="java.lang.Integer">
    select t.user_id, t.login_name,t.display_name
        from tb_user as t
        where t.user_id not in (
          select tu.user_id
            from tb_user as tu
                inner join tr_user_role as tur  
                    on tur.user_id = tu.user_id
                        where tur.role_id = #{roleId,jdbcType=INTEGER}
           )
  </select>
  
  <select id="getUserInfo" resultMap="userMap" resultType="java.lang.Integer">
    select tu.display_name,tu.login_name,tu.mobile,tu.email
        from tb_user as tu
           where tu.user_id = #{userId}
  </select>
  
  <insert id="addUserToRole" parameterType="com.jiabo.medical.entity.UserRole">
    insert into
        tr_user_role
            (
                user_id,
                role_id,
                create_time, 
                creater
            )
            values
            (
                 #{userId,jdbcType=INTEGER},
	             #{roleId,jdbcType=INTEGER},
	             #{createTime,jdbcType=TIMESTAMP},
	             #{creater,jdbcType=INTEGER}
            )
  
  </insert>
  
  <delete id="deleteUserFromRole" parameterType="com.jiabo.medical.entity.UserRole"> 
    delete from tr_user_role 
        where user_id = #{userId,jdbcType=INTEGER}
            and role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  
  <insert id="addUserInfo" parameterType="com.jiabo.medical.entity.User">  
    insert into tb_user 
        (
            login_name,
            login_password,
            mobile,
            email,
            display_name,
            create_time, 
            creater, 
            modify_time, 
            modifier
        )
        values 
         (
             #{loginName,jdbcType=VARCHAR},
             #{loginPassword,jdbcType=VARCHAR},
             #{mobile,jdbcType=VARCHAR},
             #{email,jdbcType=VARCHAR},
             #{displayName,jdbcType=VARCHAR},
             #{createTime,jdbcType=TIMESTAMP},
             #{creater,jdbcType=INTEGER},
             #{modifyTime,jdbcType=TIMESTAMP},
             #{modifier,jdbcType=INTEGER}
             )
             
  </insert>
  
  <update id="updUserInfo" parameterType="com.jiabo.medical.entity.User">
    update tb_user 
        <set>
            <if test="loginName != null and loginName != ''">
                login_name = #{loginName},
            </if>
            <if test="loginPassword != null and loginPassword != ''">
                login_password = #{loginPassword},
            </if>
            <if test="mobile != null and mobile != ''">
                mobile = #{mobile},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="displayName != null and displayName != ''">
                display_name = #{displayName},
            </if>
	            modify_time = #{modifyTime,jdbcType=TIMESTAMP},
	            modifier = #{modifier}
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
  <update id="bindUser" parameterType="com.jiabo.medical.entity.User">
    update tb_user 
        set
            weixin_openid = #{openId},
            modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            modifier = user_id

        where login_name = #{loginName}
  </update>
  
  <update id="unbindUser" parameterType="com.jiabo.medical.entity.User">
    update tb_user 
        set
           weixin_openid = null,
           modify_time = #{modifyTime,jdbcType=TIMESTAMP},
           modifier = user_id

        where login_name = #{loginName}
  </update>
  
  <delete id="delUserInfo" parameterType="java.lang.Integer">  
   delete from tb_user where user_id = #{userId,jdbcType=INTEGER}  
  </delete>

</mapper>